@model Web.Models.IndexViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Pretty Log</title>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript" src="~/Scripts/json-to-table.js"></script>
    <script type="text/javascript">
        google.load('visualization', '1', { packages: ['table', 'corechart', 'controls'] });
        var logTable = [['Type', 'Message', 'TimeStamp', 'Object', 'ThreadId']];
    </script>
    <script type="text/javascript">
        var GenerateJsonTable = function(json) {
            var obj = JSON.parse(json);
            console.log(json);
            console.log(obj);
            //var nestedTable = [{
            //    key1: "val1",
            //    key2: "val2",
            //    key3: {
            //        tableId: "tblIdNested1",
            //        tableClassName: "clsNested",
            //        linkText: "Download",
            //        data: [{
            //            subkey1: "subval1",
            //            subkey2: "subval2",
            //            subkey3: "subval3"
            //        }]
            //    }
            //}];
            return ConvertJsonToTable([obj], 'dataTable', null, 'Download');
        };
        
    </script>
</head>

<body style="background-color: white; color: gray">
    <h2>Pretty Log
    </h2>
    <div id="dashboard">
        <div id="chart" style='width: 100%; height: 60px;'></div>
        <div id="control" style='width: 100%; height: 60px;'></div>
    </div>

    <div>
        <form id="formSearch" action="/Home/Search">
            <p>Mongo Query :</p>
            <p>
                <textarea style="width: 100%; border: 1px blanchedalmond; background-color: whitesmoke; height: 120px" name="searchQuery">@Model.SearchQuery</textarea>
            </p>
            <p>
                <select name="dayCount">
                    <option value="0" selected='@Model.DayCount.Equals(0)'>Today</option>
                    <option value="1" selected="@Model.DayCount.Equals(1)">Last Day</option>
                    <option value="7" selected="@Model.DayCount.Equals(7)">Last Week</option>
                    <option value="14" selected="@Model.DayCount.Equals(14)">Last Quarter</option>
                    <option value="30" selected="@Model.DayCount.Equals(30)">Last Month</option>
                    <option value="360" selected="@Model.DayCount.Equals(360)">Last Year</option>
                </select>
            </p>
            <input type="submit" value="GO" />
           
        </form>
    </div>

    <div>
        <table id="dataTable">
            <thead></thead>
            <tbody></tbody>
        </table>

        @foreach (var item in Model.Logs)
        {
            <script>
                var date = new Date(@item.TimeStamp.Year, @item.TimeStamp.Month, @item.TimeStamp.Day, @item.TimeStamp.Hour, @item.TimeStamp.Minute, @item.TimeStamp.Second);
                logTable.push(['@item.Type', '@item.Message', date.toISOString(), '@Html.Raw(item.Object)' + GenerateJsonTable('@Html.Raw(item.Object)') + '<p><a href="#">Show As Table</a>|<a href="#">Show as Json</a></p>', @item.ThreadId])
            </script>
        }

    </div>
    <div id="table1"></div>
    <div id="chart1"></div>
    <div>
        <script type="text/javascript">
            function drawTables()
            {

                var dataTable = google.visualization.arrayToDataTable(logTable);

                var table = new google.visualization.Table(document.getElementById('table1'));
                table.draw(dataTable, {
                    page: 'enable',
                    pageSize: 25,
                    allowHtml: true,
                    showRowNumber: true
                });

                var dataView = new google.visualization.DataView(dataTable);
                dataView.setColumns([0, 4]);

                var chart = new google.visualization.PieChart(document.getElementById('chart1'));
                chart.draw(dataView, { width: 600, height: 200 });
            }

            function drawTimeLine()
            {
                var dashboard = new google.visualization.Dashboard(
                    document.getElementById('dashboard'));

                var control = new google.visualization.ControlWrapper({
                    'controlType': 'ChartRangeFilter',
                    'containerId': 'control',
                    'options': {
                        // Filter by the date axis.
                        'filterColumnIndex': 0,
                        'ui': {
                            'chartType': 'LineChart',
                            'chartOptions': {
                                'chartArea': { 'width': '90%' },
                                'hAxis': { 'baselineColor': 'none' }
                            },
                            // Display a single series that shows the closing value of the stock.
                            // Thus, this view has two columns: the date (axis) and the stock value (line series).
                            'chartView': {
                                'columns': [0, 3]
                            },
                            // 1 day in milliseconds = 24 * 60 * 60 * 1000 = 86,400,000
                            'minRangeSize': 86400000
                        }
                    },
                    // Initial range: 2012-02-09 to 2012-03-20.
                    'state': { 'range': { 'start': new Date(2012, 1, 9), 'end': new Date(2012, 2, 20) } }
                });

                var chart = new google.visualization.ChartWrapper({
                    'chartType': 'ColumnChart',
                    'containerId': 'chart',
                    'options': {
                        // Use the same chart area width as the control for axis alignment.
                        'chartArea': { 'height': '80%', 'width': '90%' },
                        'hAxis': { 'slantedText': false },
                        'vAxis': { 'viewWindow': { 'min': 0, 'max': 2000 } },
                        'legend': { 'position': 'none' }
                    },
                    // Convert the first column from 'date' to 'string'.
                    'view': {
                        'columns': [
                            {
                                'calc': function (dataTable, rowIndex)
                                {
                                    return dataTable.getFormattedValue(rowIndex, 0);
                                },
                                'type': 'string'
                            }, 1, 2, 3, 4]
                    }
                });

                var data = new google.visualization.DataTable();
                data.addColumn('date', 'Date');
                data.addColumn('number', 'Stock low');
                data.addColumn('number', 'Stock open');
                data.addColumn('number', 'Stock close');
                data.addColumn('number', 'Stock high');

                // Create random stock values, just like it works in reality.
                var open, close = 300;
                var low, high;
                for (var day = 1; day < 121; ++day)
                {
                    var change = (Math.sin(day / 2.5 + Math.PI) + Math.sin(day / 3) - Math.cos(day * 0.7)) * 150;
                    change = change >= 0 ? change + 10 : change - 10;
                    open = close;
                    close = Math.max(50, open + change);
                    low = Math.min(open, close) - (Math.cos(day * 1.7) + 1) * 15;
                    low = Math.max(0, low);
                    high = Math.max(open, close) + (Math.cos(day * 1.3) + 1) * 15;
                    var date = new Date(2012, 0, day);
                    data.addRow([date, Math.round(low), Math.round(open), Math.round(close), Math.round(high)]);
                }

                dashboard.bind(control, chart);
                dashboard.draw(data);
            }


            function draw()
            {
                drawTables();
                drawTimeLine();
            }
            google.setOnLoadCallback(draw);
        </script>
    </div>
</body>
</html>
